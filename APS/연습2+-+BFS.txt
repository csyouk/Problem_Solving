
// 너비우선탐색
// 입력 데이터
// 1 2 1 3 2 4 2 5 4 6 5 6 6 7 3 7

#include <iostream>
using namespace std;

int G[8][4] = {
	{ 0, 0, 0, 0 },
	{ 2, 2, 3, 0 },   // 정점 1의 인접정점의 개수와 인접정점들
	{ 3, 1, 4, 5 },   // 정점 2의 인접정점의 개수와 인접정점들
	{ 2, 1, 7, 0 },   // 정점 3의 인접정점의 개수와 인접정점들
	{ 2, 2, 6, 0 },   // 정점 4의 인접정점의 개수와 인접정점들
	{ 2, 2, 6, 0 },   // 정점 5의 인접정점의 개수와 인접정점들
	{ 3, 4, 5, 7 },   // 정점 6의 인접정점의 개수와 인접정점들
	{ 2, 3, 6, 0 } }; // 정점 7의 인접정점의 개수와 인접정점들
//int G[8][8];

int q[10], f, r;
int visited[8];

void BFS(int v)
{
	printf("%d ", q[++r] = v);
	visited[v] = 1;

	while (f != r)
	{
		v = q[++f];
		for (int i = 1; i <= G[v][0]; i++)
		{
			if (G[v][i] && !visited[G[v][i]])
			{
				printf("%d ", q[++r] = G[v][i]);
				visited[G[v][i]] = 1;
			}
		}
	}
}

void main()
{
	f = r = -1;
	//int u, v;
	//for (int i = 0; i < 8; i++)
	//{
	// cin >> u >> v;
	// G[u][++G[u][0]] = v;
	// G[v][++G[v][0]] = u;
	//}
	BFS(1);
}



